#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # Backend Server
    upstream x-509-server {
        server localhost:8443;
    }

    server {
        listen       443 ssl;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

    # Nginx Server Certificate and Key
        # Signed using Root Certificate (rootCA_Alok.crt) and Root Certificate should be avaiable at Client
        ssl_certificate      /Users/aloksingh/cert/localhost.crt;
        ssl_certificate_key  /Users/aloksingh/cert/localhost.key;
    
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

    # client certificate - in case Nginx need to validate Client as well (mutual authentication)
        # make verification optional, so we can display a 403 message to those
        ssl_verify_client on;
        # The root certifcate the client should sign their client certificate
        ssl_client_certificate /Users/aloksingh/cert/rootCA_Alok.crt;
        # who fail authentication
        # ssl_verify_client optional;
        ssl_verify_depth 2;

    # Not supporting TLSv1.3
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        #ssl_ciphers                 HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!3DES:!DH:!SSLv3;
    
        error_page 497 301 =307 https://x-509-server:8443$request_uri;
    
        location / {
            root   html;
            index  index.html index.htm;
        }

        location /api {
            # if the client-side certificate failed to authenticate, show a 403
            # message to the client
            if ($ssl_client_verify != SUCCESS) {
              return 403;
            }

            proxy_pass  	https://x-509-server;
            proxy_set_header   	Host             $host:8443;
            proxy_set_header  	X-Real-IP        $remote_addr;
            proxy_set_header   	X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header   	Via    		       "nginx";

    		    proxy_pass_request_body on;
    		    proxy_pass_request_headers on;

            #In case - backend Server need to validate Nginx as well
            # - the below certificate is to validate Ngix by backend
            # - the certificate must be signed with Root Certificate and should be avaiable at backend trust store
		        proxy_ssl_certificate     /Users/aloksingh/cert/clientNginx.crt;
		        proxy_ssl_certificate_key /Users/aloksingh/cert/clientNginx.key;
            proxy_ssl_ciphers         HIGH:!aNULL:!MD5;
        }


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    include servers/*;
}
